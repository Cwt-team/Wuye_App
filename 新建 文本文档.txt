# 创建物业宝项目结构的 PowerShell 脚本

# 设置项目名称
$projectName = "wuyeapp"

# 创建项目根目录
New-Item -ItemType Directory -Path $projectName
Set-Location -Path $projectName

# 创建基本目录结构
$directories = @(
    "app\src\main\java\com\example\wuyeapp\ui\fragments",
    "app\src\main\java\com\example\wuyeapp\ui\activities",
    "app\src\main\java\com\example\wuyeapp\model",
    "app\src\main\java\com\example\wuyeapp\utils",
    "app\src\main\res\drawable",
    "app\src\main\res\layout",
    "app\src\main\res\menu",
    "app\src\main\res\values",
    "app\src\test\java\com\example\wuyeapp",
    "app\src\androidTest\java\com\example\wuyeapp",
    "gradle\wrapper"
)

foreach ($dir in $directories) {
    New-Item -ItemType Directory -Path $dir -Force
}

# 创建根级别的 Gradle 文件
@"
// 根级别 build.gradle 文件
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
"@ | Out-File -FilePath "build.gradle" -Encoding UTF8

# 创建 settings.gradle 文件
@"
include ':app'
"@ | Out-File -FilePath "settings.gradle" -Encoding UTF8

# 创建 Gradle Wrapper 文件
@"
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.0.2-all.zip
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
"@ | Out-File -FilePath "gradle\wrapper\gradle-wrapper.properties" -Encoding UTF8

# 创建 app 模块的 build.gradle 文件
@"
plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.example.wuyeapp"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
"@ | Out-File -FilePath "app\build.gradle" -Encoding UTF8

# 创建 proguard-rules.pro 文件
@"
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in /usr/local/android-sdk/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the proguardFiles
# directive in build.gradle.

# Add any project specific keep options here:

"@ | Out-File -FilePath "app\proguard-rules.pro" -Encoding UTF8

# 创建 AndroidManifest.xml 文件
@"
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.wuyeapp">

    <!-- 权限声明 -->
    <uses-permission android:name="android.permission.CAMERA" />

    <application
        android:allowBackup="true"
        android:label="物业宝"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.WuyeApp">
        
        <!-- 启动页 -->
        <activity
            android:name=".ui.activities.SplashActivity"
            android:theme="@style/Theme.WuyeApp.Splash">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- 主活动 -->
        <activity android:name=".ui.activities.MainActivity" />
        
        <!-- 其他活动 -->
        <activity android:name=".ui.activities.UserInfoActivity" />
        <activity android:name=".ui.activities.SettingsActivity" />
        
    </application>

</manifest>
"@ | Out-File -FilePath "app\src\main\AndroidManifest.xml" -Encoding UTF8

# 创建资源文件

# strings.xml
@"
<resources>
    <string name="app_name">物业宝</string>
    <string name="home">首页</string>
    <string name="unlock">开锁</string>
    <string name="my">我的</string>
</resources>
"@ | Out-File -FilePath "app\src\main\res\values\strings.xml" -Encoding UTF8

# colors.xml
@"
<resources>
    <color name="colorPrimary">#2196F3</color>
    <color name="colorPrimaryVariant">#1976D2</color>
    <color name="colorOnPrimary">#FFFFFF</color>
    <color name="colorSecondary">#FFC107</color>
    <color name="colorSecondaryVariant">#FFA000</color>
    <color name="colorOnSecondary">#000000</color>
    <color name="white">#FFFFFF</color>
    <color name="black">#000000</color>
</resources>
"@ | Out-File -FilePath "app\src\main\res\values\colors.xml" -Encoding UTF8

# themes.xml
@"
<resources xmlns:tools="http://schemas.android.com/tools">
    <style name="Theme.WuyeApp" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- 主要颜色 -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryVariant">@color/colorPrimaryVariant</item>
        <item name="colorOnPrimary">@color/colorOnPrimary</item>
        <!-- 次要颜色 -->
        <item name="colorSecondary">@color/colorSecondary</item>
        <item name="colorSecondaryVariant">@color/colorSecondaryVariant</item>
        <item name="colorOnSecondary">@color/colorOnSecondary</item>
        <!-- 背景色 -->
        <item name="android:windowBackground">@color/white</item>
    </style>

    <!-- 启动页主题 -->
    <style name="Theme.WuyeApp.Splash" parent="Theme.WuyeApp">
        <item name="android:windowBackground">@color/colorPrimary</item>
    </style>
</resources>
"@ | Out-File -FilePath "app\src\main\res\values\themes.xml" -Encoding UTF8

# 创建底部导航菜单
@"
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/nav_home"
        android:icon="@drawable/ic_home"
        android:title="@string/home" />
    <item
        android:id="@+id/nav_unlock"
        android:icon="@drawable/ic_unlock"
        android:title="@string/unlock" />
    <item
        android:id="@+id/nav_my"
        android:icon="@drawable/ic_my"
        android:title="@string/my" />
</menu>
"@ | Out-File -FilePath "app\src\main\res\menu\bottom_nav_menu.xml" -Encoding UTF8

# 创建 Drawable 图标（使用简单形状代替实际图标）
# ic_home.xml
@"
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z"/>
</vector>
"@ | Out-File -FilePath "app\src\main\res\drawable\ic_home.xml" -Encoding UTF8

# ic_unlock.xml
@"
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M12,17a2,2 0,1 0,0 -4a2,2 0,0 0,0 4zm6,-7h-1V7a5,5 0,0 0,-10 0v3H6a2,2 0,0 0,-2 2v8a2,2 0,0 0,2 2h12a2,2 0,0 0,2,-2v-8a2,2 0,0 0,-2,-2zM12,7a3,3 0,1 1,0 6a3,3 0,0 1,0 -6z"/>
</vector>
"@ | Out-File -FilePath "app\src\main\res\drawable\ic_unlock.xml" -Encoding UTF8

# ic_my.xml
@"
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M12,12a5,5 0,1 0,-5 -5a5,5 0,0 0,5 5zm0,2c-3.33,0 -10,1.67 -10,5v3h20v-3c0,-3.33 -6.67,-5 -10,-5z"/>
</vector>
"@ | Out-File -FilePath "app\src\main\res\drawable\ic_my.xml" -Encoding UTF8

# 创建 mipmap 图标占位符（需要手动替换为实际图标）
New-Item -ItemType File -Path "app\src\main\res\mipmap\ic_launcher.png" -Force
New-Item -ItemType File -Path "app\src\main\res\mipmap\ic_launcher_round.png" -Force

# 创建 Kotlin 类文件

# SplashActivity.kt
@"
package com.example.wuyeapp.ui.activities

import android.content.Intent
import android.os.Bundle
import android.os.Handler
import android.os.Looper
import androidx.appcompat.app.AppCompatActivity
import com.example.wuyeapp.R

class SplashActivity : AppCompatActivity() {

    private val splashTime: Long = 2000 // 2秒

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_splash)

        Handler(Looper.getMainLooper()).postDelayed({
            val intent = Intent(this, MainActivity::class.java)
            startActivity(intent)
            finish()
        }, splashTime)
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\activities\SplashActivity.kt" -Encoding UTF8

# MainActivity.kt
@"
package com.example.wuyeapp.ui.activities

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import com.example.wuyeapp.R
import com.example.wuyeapp.ui.fragments.HomeFragment
import com.example.wuyeapp.ui.fragments.UnlockFragment
import com.example.wuyeapp.ui.fragments.MyFragment
import com.google.android.material.bottomnavigation.BottomNavigationView

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val bottomNav: BottomNavigationView = findViewById(R.id.bottom_nav)
        bottomNav.setOnItemSelectedListener { item ->
            when(item.itemId){
                R.id.nav_home -> {
                    replaceFragment(HomeFragment())
                    true
                }
                R.id.nav_unlock -> {
                    replaceFragment(UnlockFragment())
                    true
                }
                R.id.nav_my -> {
                    replaceFragment(MyFragment())
                    true
                }
                else -> false
            }
        }

        # 默认显示主页
        if (savedInstanceState -eq $null) {
            bottomNav.selectedItemId = R.id.nav_home
        }
    }

    private fun replaceFragment(fragment: Fragment){
        supportFragmentManager.beginTransaction()
            .replace(R.id.fragment_container, fragment)
            .commit()
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\activities\MainActivity.kt" -Encoding UTF8

# HomeFragment.kt
@"
package com.example.wuyeapp.ui.fragments

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.wuyeapp.R
import com.example.wuyeapp.databinding.FragmentHomeBinding

class HomeFragment : Fragment() {

    private var _binding: FragmentHomeBinding? = null
    private val binding get() = _binding!!

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?,
    ): View {
        _binding = FragmentHomeBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        
        # 设置住址信息与状态
        binding.tvAddress.text = "崔氏科技∙1区∙1栋∙1单元∙0102"
        binding.tvStatus.text = "在线"

        # 设置主要功能按钮的点击事件
        binding.btnHht.setOnClickListener { 
            Toast.ShowText(context, "户户通功能")
            # 处理户户通功能
        }
        binding.btnMonitor.setOnClickListener { 
            Toast.ShowText(context, "监视功能")
            # 处理监视功能
        }
        binding.btnInviteVisitor.setOnClickListener { 
            Toast.ShowText(context, "邀请访客功能")
            # 处理邀请访客功能
        }
        binding.btnCallElevator.setOnClickListener { 
            Toast.ShowText(context, "呼叫电梯功能")
            # 处理呼叫电梯功能
        }
        binding.btnScanOpen.setOnClickListener { 
            Toast.ShowText(context, "扫码开门功能")
            # 处理扫码开门功能
        }
        binding.btnCommunityNotify.setOnClickListener { 
            Toast.ShowText(context, "社区通知功能")
            # 处理社区通知功能
        }
        binding.btnAlarmRecord.setOnClickListener { 
            Toast.ShowText(context, "报警记录功能")
            # 处理报警记录功能
        }
        binding.btnMore.setOnClickListener { 
            Toast.ShowText(context, "更多功能")
            # 处理更多功能
        }

        # 生活服务板块
        binding.btnHousekeeping.setOnClickListener { 
            Toast.ShowText(context, "家政服务")
            # 处理家政服务
        }
        binding.btnExpress.setOnClickListener { 
            Toast.ShowText(context, "快递服务")
            # 处理快递服务
        }
        binding.btnLocalLife.setOnClickListener { 
            Toast.ShowText(context, "本地生活")
            # 处理本地生活服务
        }

        # 提示暂无通知
        binding.tvNoNotification.visibility = View.VISIBLE
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = $null
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\fragments\HomeFragment.kt" -Encoding UTF8

# UnlockFragment.kt
@"
package com.example.wuyeapp.ui.fragments

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.wuyeapp.R
import com.example.wuyeapp.databinding.FragmentUnlockBinding

class UnlockFragment : Fragment() {

    private var _binding: FragmentUnlockBinding? = $null
    private val binding get() = _binding!!

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?,
    ): View {
        _binding = FragmentUnlockBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        
        binding.btnUnlock.setOnClickListener {
            Toast.ShowText(context, "执行开锁操作")
            # 实现开锁逻辑
        }
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = $null
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\fragments\UnlockFragment.kt" -Encoding UTF8

# MyFragment.kt
@"
package com.example.wuyeapp.ui.fragments

import android.content.Intent
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.wuyeapp.R
import com.example.wuyeapp.databinding.FragmentMyBinding
import com.example.wuyeapp.ui.activities.SettingsActivity

class MyFragment : Fragment() {

    private var _binding: FragmentMyBinding? = $null
    private val binding get() = _binding!!

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?,
    ): View {
        _binding = FragmentMyBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        
        # 显示用户信息
        binding.tvPhone.text = "手机号: 13800000000"
        binding.tvAddress.text = "住址: 崔氏科技∙1区∙1栋∙1单元∙0102"

        # 功能选项点击事件
        binding.btnSwitchOwner.setOnClickListener {
            Toast.ShowText(context, "切换业主")
            # 实现切换业主逻辑
        }

        binding.btnFaceRecord.setOnClickListener {
            Toast.ShowText(context, "人脸录制")
            # 实现人脸录制逻辑
        }

        binding.btnSettings.setOnClickListener {
            $Intent = New-Object Android.Content.Intent($activity, [com.example.wuyeapp.ui.activities.SettingsActivity]::class.java)
            Start-Activity -Intent $Intent
        }
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = $null
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\fragments\MyFragment.kt" -Encoding UTF8

# UserInfoActivity.kt
@"
package com.example.wuyeapp.ui.activities

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.wuyeapp.databinding.ActivityUserInfoBinding

class UserInfoActivity : AppCompatActivity() {

    private lateinit var binding: ActivityUserInfoBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityUserInfoBinding.inflate(layoutInflater)
        setContentView(binding.root)

        # 实现用户信息页的逻辑
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\activities\UserInfoActivity.kt" -Encoding UTF8

# SettingsActivity.kt
@"
package com.example.wuyeapp.ui.activities

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.wuyeapp.databinding.ActivitySettingsBinding

class SettingsActivity : AppCompatActivity() {

    private lateinit var binding: ActivitySettingsBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivitySettingsBinding.inflate(layoutInflater)
        setContentView(binding.root)

        # 实现设置页的逻辑
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\ui\activities\SettingsActivity.kt" -Encoding UTF8

# 创建 Layout 文件

# activity_splash.xml
@"
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/colorPrimary"
    android:gravity="center">

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:gravity="center">

        <ImageView
            android:id="@+id/splash_icon"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:src="@drawable/ic_property" /> <!-- 请将 ic_property 替换为实际图标 -->

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="物业宝"
            android:textSize="24sp"
            android:textColor="@color/white"
            android:layout_marginTop="16dp"/>
    </LinearLayout>

</RelativeLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\activity_splash.xml" -Encoding UTF8

# activity_main.xml
@"
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".ui.activities.MainActivity">

    <!-- Fragment容器 -->
    <FrameLayout
        android:id="@+id/fragment_container"
        android:layout_weight="1"
        android:layout_width="match_parent"
        android:layout_height="0dp"/>

    <!-- 底部导航栏 -->
    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottom_nav"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:menu="@menu/bottom_nav_menu" />

</LinearLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\activity_main.xml" -Encoding UTF8

# fragment_home.xml
@"
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">

    <LinearLayout
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <!-- 住址信息与状态 -->
        <TextView
            android:id="@+id/tv_address"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="崔氏科技∙1区∙1栋∙1单元∙0102"
            android:textSize="16sp"
            android:textStyle="bold" />

        <TextView
            android:id="@+id/tv_status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="在线"
            android:textColor="#4CAF50"
            android:layout_marginTop="4dp" />

        <!-- 主功能区域 -->
        <GridLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:columnCount="4"
            android:rowCount="2"
            android:layout_marginTop="16dp">

            <!-- 示例按钮 -->
            <Button
                android:id="@+id/btn_hht"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="户户通" />

            <Button
                android:id="@+id/btn_monitor"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="监视" />

            <Button
                android:id="@+id/btn_invite_visitor"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="邀请访客" />

            <Button
                android:id="@+id/btn_call_elevator"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="呼叫电梯" />

            <Button
                android:id="@+id/btn_scan_open"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="扫码开门" />

            <Button
                android:id="@+id/btn_community_notify"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="社区通知" />

            <Button
                android:id="@+id/btn_alarm_record"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="报警记录" />

            <Button
                android:id="@+id/btn_more"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:text="更多" />

        </GridLayout>

        <!-- 提示用户暂无通知 -->
        <TextView
            android:id="@+id/tv_no_notification"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="暂无通知"
            android:textColor="#757575"
            android:layout_marginTop="16dp"
            android:visibility="gone" />

        <!-- 生活服务板块 -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="生活服务"
            android:textSize="18sp"
            android:textStyle="bold"
            android:layout_marginTop="24dp" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:layout_marginTop="8dp"
            android:gravity="space_between">

            <Button
                android:id="@+id/btn_housekeeping"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="家政服务"
                android:layout_marginEnd="4dp"/>

            <Button
                android:id="@+id/btn_express"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="快递服务"
                android:layout_marginStart="4dp"
                android:layout_marginEnd="4dp"/>

            <Button
                android:id="@+id/btn_local_life"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="本地生活"
                android:layout_marginStart="4dp"/>

        </LinearLayout>

    </LinearLayout>

</ScrollView>
"@ | Out-File -FilePath "app\src\main\res\layout\fragment_home.xml" -Encoding UTF8

# fragment_unlock.xml
@"
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:orientation="vertical"
    android:padding="16dp">

    <Button
        android:id="@+id/btn_unlock"
        android:layout_width="200dp"
        android:layout_height="50dp"
        android:text="开锁" />

</LinearLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\fragment_unlock.xml" -Encoding UTF8

# fragment_my.xml
@"
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- 用户信息 -->
    <TextView
        android:id="@+id/tv_phone"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="手机号: 13800000000"
        android:textSize="16sp" />

    <TextView
        android:id="@+id/tv_address"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="住址: 崔氏科技∙1区∙1栋∙1单元∙0102"
        android:textSize="16sp"
        android:layout_marginTop="4dp" />

    <!-- 功能选项 -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_marginTop="16dp">

        <Button
            android:id="@+id/btn_switch_owner"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="切换业主"
            android:layout_marginBottom="8dp" />

        <Button
            android:id="@+id/btn_face_record"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="人脸录制"
            android:layout_marginBottom="8dp" />

        <Button
            android:id="@+id/btn_settings"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="设置" />

    </LinearLayout>

</LinearLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\fragment_my.xml" -Encoding UTF8

# activity_user_info.xml
@"
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- 用户信息展示和编辑 -->

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="用户信息"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp" />

    <!-- 添加具体的用户信息项 -->

</LinearLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\activity_user_info.xml" -Encoding UTF8

# activity_settings.xml
@"
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- 设置选项展示 -->

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="设置"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp" />

    <!-- 添加具体的设置项 -->

</LinearLayout>
"@ | Out-File -FilePath "app\src\main\res\layout\activity_settings.xml" -Encoding UTF8

# 创建 ViewBinding 类文件（实际开发中由Android Studio自动生成，此处仅创建占位符以避免编译错误）

New-Item -ItemType Directory -Path "app\src\main\java\com\example\wuyeapp\databinding" -Force

# FragmentHomeBinding.kt
@"
package com.example.wuyeapp.databinding

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.annotation.NonNull

class FragmentHomeBinding {
    lateinit var root: View
    lateinit var tvAddress: TextView
    lateinit var tvStatus: TextView
    lateinit var btnHht: Button
    lateinit var btnMonitor: Button
    lateinit var btnInviteVisitor: Button
    lateinit var btnCallElevator: Button
    lateinit var btnScanOpen: Button
    lateinit var btnCommunityNotify: Button
    lateinit var btnAlarmRecord: Button
    lateinit var btnMore: Button
    lateinit var tvNoNotification: TextView
    lateinit var btnHousekeeping: Button
    lateinit var btnExpress: Button
    lateinit var btnLocalLife: Button

    companion object {
        fun inflate(inflater: LayoutInflater, container: ViewGroup?, attachToRoot: Boolean): FragmentHomeBinding {
            // 实际绑定逻辑由Android Studio处理
            return FragmentHomeBinding()
        }
    }
}
"@ | Out-File -FilePath "app\src\main\java\com\example\wuyeapp\databinding\FragmentHomeBinding.kt" -Encoding UTF8

# 重复上述步骤为其他绑定类创建占位文件（可选）

# 完成消息
Write-Host "项目 '$projectName' 已成功创建！您可以在 Android Studio 中打开该项目并开始开发。"
